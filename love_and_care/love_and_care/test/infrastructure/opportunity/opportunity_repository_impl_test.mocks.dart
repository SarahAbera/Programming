// Mocks generated by Mockito 5.4.1 from annotations
// in love_and_care/test/infrastructure/opportunity/opportunity_repository_impl_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:love_and_care/core/network/network_info.dart' as _i8;
import 'package:love_and_care/domain/opportunity/opportunity_%20model.dart'
    as _i6;
import 'package:love_and_care/infrastructure/opportunity/opportunity_local_data_provider.dart'
    as _i7;
import 'package:love_and_care/infrastructure/opportunity/opportunity_remote_data_provider.dart'
    as _i4;
import 'package:love_and_care/infrastructure/response.dart' as _i2;
import 'package:love_and_care/infrastructure/sqlite/database_helper.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseHelper_1 extends _i1.SmartFake
    implements _i3.DatabaseHelper {
  _FakeDatabaseHelper_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OpportunityRemoteDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpportunityRemoteDataProvider extends _i1.Mock
    implements _i4.OpportunityRemoteDataProvider {
  MockOpportunityRemoteDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiUrl => (super.noSuchMethod(
        Invocation.getter(#apiUrl),
        returnValue: '',
      ) as String);
  @override
  String get tokenKey => (super.noSuchMethod(
        Invocation.getter(#tokenKey),
        returnValue: '',
      ) as String);
  @override
  _i5.Future<Map<String, String>> getHeaders() => (super.noSuchMethod(
        Invocation.method(
          #getHeaders,
          [],
        ),
        returnValue: _i5.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i5.Future<Map<String, String>>);
  @override
  _i5.Future<_i2.Response<List<_i6.Opportunity>>> getAllOpportunities() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllOpportunities,
          [],
        ),
        returnValue: _i5.Future<_i2.Response<List<_i6.Opportunity>>>.value(
            _FakeResponse_0<List<_i6.Opportunity>>(
          this,
          Invocation.method(
            #getAllOpportunities,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<List<_i6.Opportunity>>>);
  @override
  _i5.Future<_i2.Response<String>> DeleteOpportunity(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #DeleteOpportunity,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Response<String>>.value(_FakeResponse_0<String>(
          this,
          Invocation.method(
            #DeleteOpportunity,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<String>>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity?>> GetOpportunity(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #GetOpportunity,
          [id],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity?>>.value(
            _FakeResponse_0<_i6.Opportunity?>(
          this,
          Invocation.method(
            #GetOpportunity,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity?>>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity>> UpdateOpportunity(
          _i6.Opportunity? opportunity) =>
      (super.noSuchMethod(
        Invocation.method(
          #UpdateOpportunity,
          [opportunity],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity>>.value(
            _FakeResponse_0<_i6.Opportunity>(
          this,
          Invocation.method(
            #UpdateOpportunity,
            [opportunity],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity>>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity>> CreateOpportunity(
    String? title,
    String? description,
    String? date,
    String? location,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #CreateOpportunity,
          [
            title,
            description,
            date,
            location,
          ],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity>>.value(
            _FakeResponse_0<_i6.Opportunity>(
          this,
          Invocation.method(
            #CreateOpportunity,
            [
              title,
              description,
              date,
              location,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity>>);
  @override
  _i5.Future<_i2.Response<List<_i6.Opportunity>>> GetMyEvents() =>
      (super.noSuchMethod(
        Invocation.method(
          #GetMyEvents,
          [],
        ),
        returnValue: _i5.Future<_i2.Response<List<_i6.Opportunity>>>.value(
            _FakeResponse_0<List<_i6.Opportunity>>(
          this,
          Invocation.method(
            #GetMyEvents,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<List<_i6.Opportunity>>>);
  @override
  _i5.Future<_i2.Response<List<_i6.Opportunity>>> GetParticipated() =>
      (super.noSuchMethod(
        Invocation.method(
          #GetParticipated,
          [],
        ),
        returnValue: _i5.Future<_i2.Response<List<_i6.Opportunity>>>.value(
            _FakeResponse_0<List<_i6.Opportunity>>(
          this,
          Invocation.method(
            #GetParticipated,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<List<_i6.Opportunity>>>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity>> LikeOpportunity(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #LikeOpportunity,
          [id],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity>>.value(
            _FakeResponse_0<_i6.Opportunity>(
          this,
          Invocation.method(
            #LikeOpportunity,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity>>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity>> ParticipateOpportunity(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #ParticipateOpportunity,
          [id],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity>>.value(
            _FakeResponse_0<_i6.Opportunity>(
          this,
          Invocation.method(
            #ParticipateOpportunity,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity>>);
}

/// A class which mocks [OpportunityLocalDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpportunityLocalDataProvider extends _i1.Mock
    implements _i7.OpportunityLocalDataProvider {
  MockOpportunityLocalDataProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.DatabaseHelper get dbHelper => (super.noSuchMethod(
        Invocation.getter(#dbHelper),
        returnValue: _FakeDatabaseHelper_1(
          this,
          Invocation.getter(#dbHelper),
        ),
      ) as _i3.DatabaseHelper);
  @override
  String get loggedInUserKey => (super.noSuchMethod(
        Invocation.getter(#loggedInUserKey),
        returnValue: '',
      ) as String);
  @override
  _i5.Future<_i2.Response<List<_i6.Opportunity>>> getAllOpportunities() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllOpportunities,
          [],
        ),
        returnValue: _i5.Future<_i2.Response<List<_i6.Opportunity>>>.value(
            _FakeResponse_0<List<_i6.Opportunity>>(
          this,
          Invocation.method(
            #getAllOpportunities,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<List<_i6.Opportunity>>>);
  @override
  _i5.Future<_i2.Response<String>> DeleteOpportunity(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #DeleteOpportunity,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Response<String>>.value(_FakeResponse_0<String>(
          this,
          Invocation.method(
            #DeleteOpportunity,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<String>>);
  @override
  _i5.Future<void> syncGetOpportunities(List<_i6.Opportunity>? opportunities) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncGetOpportunities,
          [opportunities],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> syncCreateOpportunity(_i6.Opportunity? opportunity) =>
      (super.noSuchMethod(
        Invocation.method(
          #syncCreateOpportunity,
          [opportunity],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity>> CreateOpportunity(
    String? title,
    String? description,
    String? date,
    String? location,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #CreateOpportunity,
          [
            title,
            description,
            date,
            location,
          ],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity>>.value(
            _FakeResponse_0<_i6.Opportunity>(
          this,
          Invocation.method(
            #CreateOpportunity,
            [
              title,
              description,
              date,
              location,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity>>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity?>> GetOpportunity(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #GetOpportunity,
          [id],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity?>>.value(
            _FakeResponse_0<_i6.Opportunity?>(
          this,
          Invocation.method(
            #GetOpportunity,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity?>>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity>> UpdateOpportunity(
          _i6.Opportunity? opportunity) =>
      (super.noSuchMethod(
        Invocation.method(
          #UpdateOpportunity,
          [opportunity],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity>>.value(
            _FakeResponse_0<_i6.Opportunity>(
          this,
          Invocation.method(
            #UpdateOpportunity,
            [opportunity],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity>>);
  @override
  _i5.Future<_i2.Response<List<_i6.Opportunity>>> GetMyEvents() =>
      (super.noSuchMethod(
        Invocation.method(
          #GetMyEvents,
          [],
        ),
        returnValue: _i5.Future<_i2.Response<List<_i6.Opportunity>>>.value(
            _FakeResponse_0<List<_i6.Opportunity>>(
          this,
          Invocation.method(
            #GetMyEvents,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<List<_i6.Opportunity>>>);
  @override
  _i5.Future<_i2.Response<List<_i6.Opportunity>>> GetParticipated() =>
      (super.noSuchMethod(
        Invocation.method(
          #GetParticipated,
          [],
        ),
        returnValue: _i5.Future<_i2.Response<List<_i6.Opportunity>>>.value(
            _FakeResponse_0<List<_i6.Opportunity>>(
          this,
          Invocation.method(
            #GetParticipated,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<List<_i6.Opportunity>>>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity>> LikeOpportunity(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #LikeOpportunity,
          [id],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity>>.value(
            _FakeResponse_0<_i6.Opportunity>(
          this,
          Invocation.method(
            #LikeOpportunity,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity>>);
  @override
  _i5.Future<_i2.Response<_i6.Opportunity>> ParticipateOpportunity(
          String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #ParticipateOpportunity,
          [id],
        ),
        returnValue: _i5.Future<_i2.Response<_i6.Opportunity>>.value(
            _FakeResponse_0<_i6.Opportunity>(
          this,
          Invocation.method(
            #ParticipateOpportunity,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<_i6.Opportunity>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i8.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
